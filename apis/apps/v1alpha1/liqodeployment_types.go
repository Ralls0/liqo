// Copyright 2019-2021 The Liqo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1

import (
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DeploymentTemplateSpec describes the deployment template.
type DeploymentTemplateSpec struct {
	// Standard object's metadata.
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// Specification of the deployment desired behavior.
	Spec appsv1.DeploymentSpec `json:"spec,omitempty"`
}

// GeneratedDeploymentStatus describes the status of a generated deployment.
type GeneratedDeploymentStatus struct {
	// DeploymentLastCondition is the last condition provided by the deployment.
	DeploymentLastCondition appsv1.DeploymentCondition `json:"deploymentLastCondition,omitempty"`
	// GenerationLabelsValues represents the combination of values that characterizes this generated deployment.
	GenerationLabelsValues map[string]string `json:"generationLabelValues,omitempty"`
}

// LiqoDeploymentSpec defines the desired state of LiqoDeployment.
type LiqoDeploymentSpec struct {
	// Template describes the deployment replicas content.
	// +kubebuilder:pruning:PreserveUnknownFields
	Template DeploymentTemplateSpec `json:"template"`
	// GenerationLabels chooses the granularity to replicate deployments. Each combination of values that these
	// labels assume between remote clusters leads to the creation of a deployment replica.
	GenerationLabels []string `json:"generationLabels,omitempty"`
	// SelectedClusters allows users selecting a restricted group of cluster to involve in the deployment
	// replication process.
	SelectedClusters corev1.NodeSelector `json:"selectedClusters,omitempty"`
}

// LiqoDeploymentStatus defines the observed state of LiqoDeployment.
type LiqoDeploymentStatus struct {
	// CurrentDeployment keeps track of the deployments generated by this resource and their actual status.
	// Every entry has as its key the generated deployment name, while as its value a combination of:
	// the last deployment condition and the GenerationLabels values that characterize this generated deployment.
	CurrentDeployment map[string]GeneratedDeploymentStatus `json:"currentDeployment,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:shortName="ldp"

// LiqoDeployment is the Schema for the liqodeployments API.
type LiqoDeployment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   LiqoDeploymentSpec   `json:"spec"`
	Status LiqoDeploymentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LiqoDeploymentList contains a list of LiqoDeployment.
type LiqoDeploymentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LiqoDeployment `json:"items"`
}

func init() {
	SchemeBuilder.Register(&LiqoDeployment{}, &LiqoDeploymentList{})
}
